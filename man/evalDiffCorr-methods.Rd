% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_sled.R
\docType{methods}
\name{evalDiffCorr}
\alias{evalDiffCorr}
\alias{evalDiffCorr,EList,ANY,GRanges,list-method}
\alias{evalDiffCorr,EList,ANY,GRanges,list,numeric,ANY-method}
\alias{evalDiffCorr,matrix,ANY,GRanges,list-method}
\alias{evalDiffCorr,matrix,ANY,GRanges,list,numeric,ANY-method}
\title{Evaluate Differential Correlation}
\usage{
evalDiffCorr(epiSignal, testVariable, gr, clustList, npermute = 100,
  mc.cores = 4)

\S4method{evalDiffCorr}{EList,ANY,GRanges,list}(epiSignal, testVariable,
  gr, clustList, npermute = 100, mc.cores = 4)

\S4method{evalDiffCorr}{matrix,ANY,GRanges,list}(epiSignal, testVariable,
  gr, clustList, npermute = 100, mc.cores = 4)
}
\arguments{
\item{epiSignal}{matrix or EList of epigentic signal.  Rows are features and columns are samples}

\item{testVariable}{factor indicating two subsets of the samples to compare}

\item{gr}{GenomciRanges corresponding to the rows of epiSignal}

\item{clustList}{list of cluster assignments}

\item{npermute}{number of permutations}

\item{mc.cores}{number of cores to permutations}
}
\value{
list of result by chromosome and clustList
}
\description{
Evaluate Differential Correlation between two subsets of data
}
\details{
Correlation sturucture between two subsets of the data is evaluated with sparse-Leading-Eigenvalue-Driven (sLED) test:
Zhu, Lingxue, Jing Lei, Bernie Devlin, and Kathryn Roeder. 2017. Testing high-dimensional covariance matrices, with application to detecting schizophrenia risk genes. Annals of Applied Statistics. 11:3 1810-1831. doi:10.1214/17-AOAS1062
}
\examples{
library(GenomicRanges)

data('decorateData')

# Evaluate hierarchical clsutering
treeList = runOrderedClusteringGenome( simData, simLocation ) 

# Choose cutoffs and return clutsers
treeListClusters = createClusters( treeList )

# Plot correlations and clusters in region defind by query
query = GRanges('chr1', IRanges(0, 1000))

plotDecorate( treeList, treeListClusters, query)

# Simulate variable to split dataset by
set.seed(1)
metadata = data.frame( Disease = factor(sample(0:1, ncol(simData), replace=TRUE)))

# Evaluate Differential Correlation between two subsets of data
sledRes = evalDiffCorr( simData, metadata$Disease, simLocation, treeListClusters, npermute=20)

# get summary of results
df = summary( sledRes )

# print results
head(df)

}
