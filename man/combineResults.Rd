% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combineResults.R
\name{combineResults}
\alias{combineResults}
\title{Combine results into a single data.frame}
\usage{
combineResults(
  sledRes,
  clstScore,
  treeListClusters,
  peakLocations,
  verbose = TRUE
)
}
\arguments{
\item{sledRes}{sLEDresults from evalDiffCorr()}

\item{clstScore}{cluster summary statistics from from scoreClusters()}

\item{treeListClusters}{epiclustDiscreteListContain from createClusters()}

\item{peakLocations}{GenomeRanges object}

\item{verbose}{show messages}
}
\description{
Combine results into a single data.frame for easy post processing
}
\examples{
library(GenomicRanges)
library(EnsDb.Hsapiens.v86)

# load data
data('decorateData')

# load gene locations
ensdb = EnsDb.Hsapiens.v86

# Evaluate hierarchical clsutering
treeList = runOrderedClusteringGenome( simData, simLocation ) 

# Choose cutoffs and return clusters
treeListClusters = createClusters( treeList, method = "meanClusterSize", meanClusterSize=c( 10, 20) )

# Evaluate strength of correlation for each cluster
clstScore = scoreClusters(treeList, treeListClusters )

# Filter to retain only strong clusters
# If lead eigen value fraction (LEF) > 30\% then keep clusters
# LEF is the fraction of variance explained by the first eigen-value
clustInclude = retainClusters( clstScore, "LEF", 0.30 )

# get retained clusters
treeListClusters_filter = filterClusters( treeListClusters, clustInclude)

# collapse redundant clusters
treeListClusters_collapse = collapseClusters( treeListClusters_filter, simLocation, jaccardCutoff=0.9)

# Evaluate Differential Correlation between two subsets of data
sledRes = evalDiffCorr( simData, metadata$Disease, simLocation, treeListClusters_collapse, npermute=c(20, 200, 2000))

# Combine results for each cluster
df_results = combineResults( sledRes, clstScore, treeListClusters, simLocation)

}
