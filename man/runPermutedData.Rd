% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random_statistics.R
\name{runPermutedData}
\alias{runPermutedData}
\title{Run hierarchical clustering permuting features}
\usage{
runPermutedData(
  X,
  gr,
  method = c("adjclust", "hclustgeo"),
  quiet = FALSE,
  alpha = 0.5,
  adjacentCount = 500,
  setNANtoZero = FALSE,
  method.corr = c("pearson", "spearman"),
  meanClusterSize = c(5, 10)
)
}
\arguments{
\item{X}{data matrix were *rows* are features in sequential order}

\item{gr}{GenomicRanges object with entries corresponding to the *rows* of X}

\item{method}{'adjclust': adjacency constrained clustering.  'hclustgeo': incorporate data correlation and distance in bp}

\item{quiet}{suppress messages}

\item{alpha}{use by 'hclustgeo': mixture parameter weighing correlations (alpha=0) versus chromosome distances (alpha=1)}

\item{adjacentCount}{used by 'adjclust': number of adjacent entries to compute correlation against}

\item{setNANtoZero}{replace NAN correlation values with a zero}

\item{method.corr}{Specify type of correlation: "pearson", "kendall", "spearman"}

\item{meanClusterSize}{select target mean cluster size.  Can be an array of values}
}
\value{
list of clusterScores and cutoff values at 5% false positive rate
}
\description{
Run hierarchical clustering permuting features to get statistics under the null
}
\examples{
library(GenomicRanges)

# load data
data('decorateData')

# First, analysis of original data
# Evaluate hierarchical clustering
treeList = runOrderedClusteringGenome( simData, simLocation ) 

# Choose cutoffs and return clusters
treeListClusters = createClusters( treeList, method='meanClusterSize', meanClusterSize=c(5, 10) )

# Evaluate score for each cluster
clstScore = scoreClusters(treeList, treeListClusters )

# Then, analysis of permuted data
# Evaluate hierarchical clustering
res = runPermutedData( simData, simLocation, meanClusterSize=c(5, 10)  ) 

# LEF values for permuted data at 5\% false positive rate
res$cutoffs$LEF

# Retain clusters that pass this criteria
clustInclude = retainClusters( clstScore, "LEF", res$cutoffs$LEF )

}
