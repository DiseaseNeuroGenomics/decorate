1.0.15: May 29, 2019
	- improve error messages for retainClusters()
	- add combineResults()
	- add additional plots to vignette

1.0.14: May 28, 2019
	- add plotScatterPairs()
	- plotDecorate() can compute correlation matrix directly from data
	- fixed bug in sign of sLED test statistic
	- plotDecorate() and plotCompareCorr() now have argument absCorr=FALSE as default
	- New simulated data
	- add method "medianCorr" to evalDiffCorr()

1.0.13: May 27, 2019
	- apply droplevels() to testVariable in .evalDiffCorr() and plotCompareCorr()

1.0.12: March 26, 2019
	- whichCluster() accepts array for feature_id
	- plotDecorate() and plotEnsGenes() now don't print empty page

1.0.11: March 25, 2019
	- whichCluster() results now have proper row names
	- add function getFeaturesInClusterList()
	- for plotDecorate(), expand allowable window to 5e7 bp for plotting genes

1.0.9: March 22, 2019
	- enable analysys of clusters of size 3

1.0.9: March 17, 2019
	- export classes so objects restore correctly from load()

1.0.8: March 7, 2019
	- fix error in evaluateCorrDecay()

1.0.7: March 4, 2019
	- GRanges object uses names(gr) feature	
	- drop chromosomes from GRanges objects if they don't have any entries

1.0.6: Feb 28, 2019
	- fix plotDecorate() for intervals with no genes
	- fix collapseClusters() and plotDecorate() error with feature names
	
1.0.5: Feb 27, 2019
	- plotDecorate() now plots genes
	- much faster collapseClusters()

1.0.4: Feb 25, 2019
	- Fix small bugs in syntax
	- update vignette to new workflow
	- update readme

1.0.3: Feb 22, 2019
	- add retainClusters() to process results of scoreClusters()
	- chance synatax of filterClusters()
	- add collapseCluster() to drop redundant clusters
	- countClusters() fix

1.0.2: Feb 21, 2019
	- Add genes to plotDecorate()
	- add handling of multiple clustering cutoff parameters
	- parallelize scoreClusters()

1.0.1
	- add evaluateCorrDecay()
	- fix plotting for plotDecorate() and plotCompareCorr()

1.0.0
	- Release

0.99.3:
	- fix issues with ploting trees

0.99.2:
	- reduce memory usage substantially
	- reduce compute time 100x by using adaptive permutations

Jan 22, 2019:
    Initial version
